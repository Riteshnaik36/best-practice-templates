Groovy files in Jenkins are primarily used for defining Jenkins Pipelines (typically Jenkinsfile) or for scripting jobs via Jenkins Shared Libraries. 
Jenkinsfile
This file defines the entire pipeline structure (stages, steps, etc.) and integrates with the Jenkins server for Continuous Integration/Continuous Deployment (CI/CD) processes.
A typical Jenkinsfile contains stages like Build, Test, Deploy, etc.
==================================================================================================================
Best Practices:
Declarative Pipeline: Use declarative syntax for readability and maintainability
==================================================================================================================
sample code:::: 
==================================================================================================================

pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
    }
}
==================================================================================================================
Avoid hardcoding: Store credentials and sensitive data in Jenkins' credentials store, not directly in the Jenkinsfile.
Use Parallel Steps: To speed up the pipeline, use parallel stages where possible.
Pipeline as Code: Version control your Jenkinsfiles alongside application code.
Use Shared Libraries: For common tasks across multiple pipelines, store reusable functions in a shared library.

